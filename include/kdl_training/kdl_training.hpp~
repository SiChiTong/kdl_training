#ifndef KDL_TRAINING_KDL_TRAINING_HPP
#define KDL_TRAINING_KDL_TRAINING_HPP

#include <pr2_mechanism_model/joint.h>
#include <pr2_mechanism_model/chain.h>
#include <boost/scoped_ptr.hpp>
#include <kdl/chainfksolverpos_recursive.hpp>
 
namespace kdl_training
{

class ControlCart
{
private:
	pr2_mechanism_model::JointState* joint_state_;
 	pr2_mechanism_model::Chain chain_;

  	KDL::JntArray jnt_pos_, jnt_effort_;
        KDL::Frame reference_pose_;
 
        boost::scoped_ptr<KDL::ChainFkSolverPos> jnt_to_pose_solver_;
   
public:
        bool init(pr2_mechanism_model::RobotState *robot, ros::NodeHandle &n);
        void starting();
        void update();
        void stopping();
};

}

#endif // KDL_TRAINING_KDL_TRAINING_HPP
