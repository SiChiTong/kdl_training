#include <ros/ros.h>
#include <kdl_training/kdl_training.hpp>
#include <kdl_parser/kdl_parser.hpp>
#include <kdl/chainfksolverpos_recursive.hpp>


int main(int argc, char **argv)
{
	ros::init(argc, argv,"kdl_parser");
    	
    	ros::NodeHandle node;
	std::string robot_desc_string;
	node.param("robot_description", robot_desc_string, std::string());
	
	KDL::Tree my_tree;
	if (!kdl_parser::treeFromString(robot_desc_string, my_tree))
	{
		ROS_ERROR("Failed to construct kdl tree");
		return false;
	}

	KDL::Chain my_chain;
	if (!my_tree.getChain("base_link","l_gripper_tool_frame", my_chain))
	{
		ROS_ERROR("Failed to get chain form KDL tree.");
		return false;
	}
	KDL::ChainFkSolverPos my_solver = new KDL::ChainFkSolverPos_recursive(my_chain);

    return 0;
}

